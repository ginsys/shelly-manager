{
  "permissions": {
    "allow": [
      "Bash(*)",
      "WebFetch(*)",
      "Bash(grep:*)",
      "Bash(cat:*)",
      "Bash(sed:*)",
      "Bash(git add:*)",
      "Bash(make test:*)",
      "Bash(go test:*)",
      "Bash(go list:*)",
      "Bash(mkdir:*)",
      "Bash(go mod:*)",
      "Bash(mv:*)",
      "Bash(go build:*)",
      "Bash(go build:*)",
      "Bash(./bin/shelly-manager:*)",
      "Bash(rm:*)",
      "Bash(make:*)",
      "Bash(go tool cover:*)",
      "Bash(go:*)",
      "Bash(CGO_ENABLED=1 go test -v -short ./...)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./...)",
      "WebFetch(domain:productionresultssa3.blob.core.windows.net)",
      "Bash(env CGO_ENABLED=1 go test -v -short -race ./internal/logging ./internal/discovery ./internal/service)",
      "Bash(unzip:*)",
      "Bash(CGO_ENABLED=1 go test -v -short ./cmd/shelly-manager)",
      "Bash(CGO_ENABLED=1 go test -v -race -short ./...)",
      "WebFetch(domain:golangci-lint.run)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(find:*)",
      "Bash(curl:*)",
      "Bash(timeout 10s go test:*)",
      "Bash(CGO_ENABLED=1 go test:*)",
      "Bash(go test:*)",
      "Bash(git commit:*)",
      "Bash(git rm:*)",
      "Bash(timeout 30s go test -v ./internal/service -run TestShellyService_DiscoverDevices_AutoNetwork)",
      "Bash(timeout 30s go test -v ./internal/discovery -run TestScanHost_NoDevice)",
      "Bash(timeout 2m make test-full)",
      "Bash(timeout 30s make test-full)",
      "Bash(timeout:*)",
      "Bash(pkill:*)",
      "Bash(lsof:*)",
      "Bash(git check-ignore:*)",
      "Bash(export LC_NUMERIC=C)",
      "Bash(export LANG=C)",
      "Bash(SHELLY_FORCE_NETWORK_TESTS=1 go test -short -v ./internal/discovery -run TestScanHost_NoDevice)",
      "Bash(./bin/shelly-provisioner:*)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./cmd/shelly-manager)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/configuration -run \"TestConfigurationService_TemplateEngineIntegration|TestConfigurationService_ValidationWorkflow\")",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/configuration -run \"TestConfigurationService_TemplateEngineIntegration\")",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/configuration -run \"TestConfigurationService_ValidationWorkflow\")",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/configuration -run \"TestConfigurationService_TemplateEngineIntegration\")",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/configuration)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/configuration -run TestConfigurationService_TypedConfigurationWorkflow)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/configuration -run TestMQTTConfiguration_Validate)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/logging -run TestNew_FileOutput)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/logging -run TestGetWriter)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/logging -run TestWithFields)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/database -run TestNewManager_InvalidPath)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./cmd/shelly-manager -run \"TestCLICommands/help_command\" -timeout 30s)"
    ],
    "deny": [],
    "defaultMode": "acceptEdits",
    "additionalDirectories": [
      "/home/serge/scratch"
    ]
  },
  "memory": ".claude/CLAUDE.md",
  "saveSettingsPath": ".claude/settings.json",
  "useLocalSettings": false
}
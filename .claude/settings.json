{
  "permissions": {
    "allow": [
      "WebFetch(*)",
      "WebFetch(domain:productionresultssa3.blob.core.windows.net)",
      "WebFetch(domain:golangci-lint.run)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(go:*)",
      "Bash(go test:*)",
      "Bash(go build:*)",
      "Bash(go mod:*)",
      "Bash(go run:*)",
      "Bash(go fmt:*)",
      "Bash(go vet:*)",
      "Bash(go list:*)",
      "Bash(go tool:*)",
      "Bash(go version)",
      "Bash(env CGO_ENABLED=* go:*)",
      "Bash(CGO_ENABLED=* go:*)",
      "Bash(SHELLY_FORCE_NETWORK_TESTS=* go:*)",
      "Bash(make:*)",
      "Bash(make test:*)",
      "Bash(make build:*)",
      "Bash(make --version)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(git status:*)",
      "Bash(git diff:*)",
      "Bash(git log:*)",
      "Bash(git checkout:*)",
      "Bash(git pull:*)",
      "Bash(git branch:*)",
      "Bash(git rm:*)",
      "Bash(git check-ignore:*)",
      "Bash(grep:*)",
      "Bash(cat:*)",
      "Bash(ls:*)",
      "Bash(find:*)",
      "Bash(echo:*)",
      "Bash(pwd)",
      "Bash(which:*)",
      "Bash(head:*)",
      "Bash(tail:*)",
      "Bash(sed:*)",
      "Bash(mkdir:*)",
      "Bash(touch:*)",
      "Bash(cp:*)",
      "Bash(mv:*)",
      "Bash(rm:*.go)",
      "Bash(rm:*.json)",
      "Bash(rm:*.md)",
      "Bash(rm:*.yaml)",
      "Bash(rm:*.yml)",
      "Bash(rm:*.out)",
      "Bash(rm:*.tmp)",
      "Bash(rm:-f *.go)",
      "Bash(rm:-f *.json)",
      "Bash(rm:-f *.md)",
      "Bash(rm:-f *.out)",
      "Bash(rm:-rf ./tmp/*)",
      "Bash(rm:-rf ./test/*)",
      "Bash(rm:-rf ./coverage*)",
      "Bash(./bin/shelly-manager:*)",
      "Bash(./bin/shelly-provisioner:*)",
      "Bash(timeout:*)",
      "Bash(time:*)",
      "Bash(curl:*)",
      "Bash(wget:*)",
      "Bash(unzip:*)",
      "Bash(tar:*)",
      "Bash(python3:*)",
      "Bash(sqlite3:*)",
      "Bash(ps:*)",
      "Bash(pgrep:*)",
      "Bash(lsof:*)",
      "Bash(kill:[0-9]*)",
      "Bash(pkill:shelly-manager)",
      "Bash(pkill:go)",
      "Bash(gh:*)",
      "Bash(gh run:*)",
      "Bash(gh workflow:*)",
      "Bash(gh api:*)",
      "Bash(export LC_NUMERIC=C)",
      "Bash(export LANG=C)",
      "Bash(export SHELLY_MANAGER_SERVER_PORT=*)",
      "Bash(if [ -f * ])",
      "Bash(then echo:*)",
      "Bash(else echo:*)",
      "Bash(fi)",
      "Bash(od:*)",
      "Bash(strace:*)",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_click",
      "mcp__sequential-thinking__sequentialthinking",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/api -run TestValidateDeviceSettings)",
      "Bash(env CGO_ENABLED=1 go test -short ./internal/api -run TestValidateDeviceSettings)",
      "Bash(CGO_ENABLED=1 go test -v -short internal/metrics/collector_test.go internal/metrics/collector.go internal/metrics/service.go internal/metrics/models.go -run TestCollectorPeriodicCollection)",
      "Bash(./shelly-provisioner status)",
      "Bash(true)",
      "Bash(./shelly-manager:*)",
      "Bash(./shelly-provisioner:*)",
      "Bash(GOOS=darwin go run ./cmd/shelly-provisioner scan-ap)",
      "Bash(rm:*)"
    ],
    "deny": [],
    "defaultMode": "acceptEdits",
    "additionalDirectories": [
      "/home/serge/scratch",
      "/home/serge",
      "/etc",
      "/tmp"
    ]
  },
  "memory": ".claude/CLAUDE.md",
  "saveSettingsPath": ".claude/settings.json",
  "useLocalSettings": false
}
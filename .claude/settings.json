{
  "permissions": {
    "allow": [
      "Bash(*)",
      "WebFetch(*)",
      "Bash(grep:*)",
      "Bash(cat:*)",
      "Bash(sed:*)",
      "Bash(git add:*)",
      "Bash(make test:*)",
      "Bash(go test:*)",
      "Bash(go list:*)",
      "Bash(mkdir:*)",
      "Bash(go mod:*)",
      "Bash(mv:*)",
      "Bash(go build:*)",
      "Bash(go build:*)",
      "Bash(./bin/shelly-manager:*)",
      "Bash(rm:*)",
      "Bash(make:*)",
      "Bash(go tool cover:*)",
      "Bash(go:*)",
      "Bash(CGO_ENABLED=1 go test -v -short ./...)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./...)",
      "WebFetch(domain:productionresultssa3.blob.core.windows.net)",
      "Bash(env CGO_ENABLED=1 go test -v -short -race ./internal/logging ./internal/discovery ./internal/service)",
      "Bash(unzip:*)",
      "Bash(CGO_ENABLED=1 go test -v -short ./cmd/shelly-manager)",
      "Bash(CGO_ENABLED=1 go test -v -race -short ./...)",
      "WebFetch(domain:golangci-lint.run)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(find:*)",
      "Bash(curl:*)",
      "Bash(timeout 10s go test:*)",
      "Bash(CGO_ENABLED=1 go test:*)",
      "Bash(go test:*)",
      "Bash(git commit:*)",
      "Bash(git rm:*)",
      "Bash(timeout 30s go test -v ./internal/service -run TestShellyService_DiscoverDevices_AutoNetwork)",
      "Bash(timeout 30s go test -v ./internal/discovery -run TestScanHost_NoDevice)",
      "Bash(timeout 2m make test-full)",
      "Bash(timeout 30s make test-full)",
      "Bash(timeout:*)",
      "Bash(pkill:*)",
      "Bash(lsof:*)",
      "Bash(git check-ignore:*)",
      "Bash(export LC_NUMERIC=C)",
      "Bash(export LANG=C)",
      "Bash(SHELLY_FORCE_NETWORK_TESTS=1 go test -short -v ./internal/discovery -run TestScanHost_NoDevice)",
      "Bash(./bin/shelly-provisioner:*)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./cmd/shelly-manager)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/configuration -run \"TestConfigurationService_TemplateEngineIntegration|TestConfigurationService_ValidationWorkflow\")",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/configuration -run \"TestConfigurationService_TemplateEngineIntegration\")",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/configuration -run \"TestConfigurationService_ValidationWorkflow\")",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/configuration -run \"TestConfigurationService_TemplateEngineIntegration\")",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/configuration)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/configuration -run TestConfigurationService_TypedConfigurationWorkflow)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/configuration -run TestMQTTConfiguration_Validate)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/logging -run TestNew_FileOutput)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/logging -run TestGetWriter)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/logging -run TestWithFields)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/database -run TestNewManager_InvalidPath)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./cmd/shelly-manager -run \"TestCLICommands/help_command\" -timeout 30s)",
      "Bash(git push:*)",
      "Bash(gh workflow:*)",
      "Bash(echo \"Exit code: $?\")",
      "Bash(echo $?)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/configuration -run TestAuthConfiguration_Validate)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/configuration -run TestConfigurationService_RawToTypedConversion)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/configuration -run TestConfigurationService_ConfigurationHistory)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/configuration -run \"TestConfigurationService_ConfigurationHistory$\")",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/configuration -run \"TestConfigurationService_RawToTypedConversion/Partial\")",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/configuration -run \"TestConfigurationService_RawToTypedConversion$\")",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/configuration -run TestIsValidHostnamePort)",
      "Bash(env CGO_ENABLED=1 go test -short ./internal/configuration)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/configuration -run \"TestAuthConfiguration_Validate|TestConfigurationService_ConfigurationHistory|TestConfigurationService_RawToTypedConversion\")",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/configuration -run \"TestConfigurationValidator\")",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/configuration -run \"TestConfigurationValidator_ValidateConfiguration/Valid_complete_configuration\")",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/configuration -run \"TestConfigurationValidator_ValidateAuth\")",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/configuration -run \"TestConfigurationValidator_ValidatePasswordStrength\")",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/configuration -run \"TestConfigurationValidator_DeviceCompatibility\")",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/config)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/config -run TestLoad_EmptyConfigPath)",
      "Bash(gh run watch:*)",
      "Bash(number\". Windows YAML parser was interpreting quoted network addresses\nlike \"192.168.1.0/24\" as potential hexadecimal numbers.\n\nChanges:\n- Remove quotes from discovery.networks array entries\n- Remove quotes from dhcp.network, start_ip, end_ip\n- Remove quotes from opnsense.host\n- Maintain consistent unquoted format for all IP addresses\n\nThis resolves Windows CI test failures in CLI commands that load the\nmain configuration file during testing.\nEOF\n)\")",
      "Bash(is being used by another process\" errors on Windows.\n\nChanges:\n- Add Close() method to database.Manager that properly closes underlying sql.DB\n- Update createTestDB() helper to use t.Cleanup() for automatic database closure\n- Add database cleanup to benchmark functions that create databases directly\n- Ensure all SQLite database connections are closed before temp directory cleanup\n\nThis resolves Windows CI test failures caused by SQLite file locking issues\nduring test cleanup.\nEOF\n)\")",
      "Bash(env CGO_ENABLED=1 go test -v -short ./cmd/shelly-manager -run \"TestCLICommands/provision_command\" -timeout 30s)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./cmd/shelly-manager -timeout 60s)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/config -run TestLoad_ValidConfig)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/testutil -run TestCreateTestConfigFile)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./cmd/shelly-manager -run \"TestCLICommands\" -timeout 60s)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./cmd/shelly-manager -run \"TestServerCommand\" -timeout 30s)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/configuration -run \"TestBulkDetectDrift\" -timeout 30s)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/logging -run \"TestTimeoutCreatingFileLogger\" -timeout 30s)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/logging -run \"TestGenerateRequestID\" -timeout 30s)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/logging -run \"TestCORSMiddleware_LogsRequests|TestCORSMiddleware_NoLogWithoutOrigin|TestMultipleMiddleware\" -timeout 30s)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/logging -run \"TestTimeoutCreatingFileLogger|TestHTTPMiddleware_LogsRequests|TestCORSMiddleware_LogsRequests|TestCORSMiddleware_NoLogWithoutOrigin|TestMultipleMiddleware|TestGenerateRequestID\" -timeout 30s)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/service -run \"TestShellyService_ConcurrentOperations\" -timeout 30s)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/configuration -run \"TestConfigurationValidator_ValidateTemplates|TestConfigurationValidator_TemplateSecurityValidation|TestConfigurationValidator_TemplateVariableDetection|TestConfigurationValidator_Integration\")",
      "Bash(env CGO_ENABLED=1 go test -v -race -short ./internal/configuration -run TestBulkDetectDrift)",
      "Bash(env CGO_ENABLED=1 go test -v -race -short ./...)",
      "Bash(env CGO_ENABLED=1 go test -v -race -short ./internal/configuration)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/configuration -run TestServiceWithNilLogger)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/configuration -run TestConfigurationValidator_ValidateTemplates)",
      "Bash(env CGO_ENABLED=1 go test -short ./...)",
      "Bash(env CGO_ENABLED=1 go test -race -short ./...)",
      "Bash(env CGO_ENABLED=1 go test -v -race -short ./cmd/shelly-manager)",
      "Bash(env CGO_ENABLED=1 go test -v -race -short ./internal/configuration -run \"TestBulkDetectDrift|TestServiceWithNilLogger\")",
      "Bash(env CGO_ENABLED=1 go test -race -short ./... -run \"^((?!TestConfigurationValidator_ValidateTemplates|TestConfigurationValidator_TemplateSecurityValidation|TestConfigurationValidator_TemplateVariableDetection|TestConfigurationValidator_Integration).)*$\")",
      "Bash(env CGO_ENABLED=1 go test -race -short ./internal/configuration -skip \"TestConfigurationValidator_ValidateTemplates|TestConfigurationValidator_TemplateSecurityValidation|TestConfigurationValidator_TemplateVariableDetection|TestConfigurationValidator_Integration\")",
      "Bash(env CGO_ENABLED=1 go test -race -short ./cmd/shelly-manager ./internal/database ./internal/service ./internal/api)",
      "Bash(env CGO_ENABLED=1 go test -v ./internal/configuration -run \"TestConfigurationValidator_ValidateTemplates/Valid_template_with_safe_functions\")",
      "Bash(env CGO_ENABLED=1 go test -v ./internal/configuration -run \"TestConfigurationValidator_ValidateTemplates/Template_with_Sprig_functions\")",
      "Bash(env CGO_ENABLED=1 go test -v ./internal/configuration -run \"TestConfigurationValidator_ValidateTemplates/Template_with_dangerous_functions\")",
      "Bash(env CGO_ENABLED=1 go test -v ./internal/configuration -run \"TestConfigurationValidator_ValidateTemplates/Template_with_environment_variables\")",
      "Bash(env CGO_ENABLED=1 go test -v ./internal/configuration -run \"TestConfigurationValidator_ValidateTemplates$\")",
      "Bash(env CGO_ENABLED=1 go test -v ./internal/configuration -run \"TestConfigurationValidator_ValidateTemplates/Complex_valid_template\")",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/configuration -run \"TestConfigurationValidator_ValidateTemplates\")",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/configuration -run \"TestConfigurationValidator_Integration\" -test.v)",
      "Bash(env CGO_ENABLED=1 go test -v -short ./internal/configuration -run \"TestConfigurationValidator_Integration\")",
      "mcp__playwright__browser_navigate",
      "Bash(export SHELLY_MANAGER_SERVER_PORT=8081)",
      "Bash(SHELLY_MANAGER_SERVER_PORT=8081 go run cmd/shelly-manager/main.go server)",
      "Bash(env CGO_ENABLED=1 go build -v ./internal/configuration ./internal/api)",
      "Bash(env CGO_ENABLED=1 go build -v ./internal/api)",
      "Bash(env CGO_ENABLED=1 go build -v ./cmd/shelly-manager)",
      "Bash(kill:*)",
      "Bash(env CGO_ENABLED=1 go test -v -timeout=5m ./...)",
      "Bash(env CGO_ENABLED=1 go test -v -timeout=30s ./internal/service)",
      "Bash(env CGO_ENABLED=1 go test -v -timeout=30s -short ./internal/service)",
      "Bash(env CGO_ENABLED=1 go test -v -timeout=30s -short ./internal/discovery)",
      "Bash(CGO_ENABLED=1 go build -v ./cmd/shelly-manager)",
      "mcp__playwright__browser_click",
      "Bash(od:*)",
      "Bash(strace:*)",
      "Bash(python3:*)",
      "Bash(cp:*)",
      "Bash(if [ -f data/shelly.db ])",
      "Bash(then echo \"Database exists\")",
      "Bash(sqlite3:*)",
      "Bash(else echo \"Database does not exist\")",
      "Bash(fi)",
      "Bash(env CGO_ENABLED=1 go test -v -short -coverprofile=coverage.out ./...)",
      "Bash(env CGO_ENABLED=1 go test -v -short -coverprofile=coverage_new.out ./...)",
      "Bash(env CGO_ENABLED=1 go test -v -short -coverprofile=coverage_new.out ./internal/api ./internal/service)",
      "Bash(env CGO_ENABLED=1 go test -v -short -coverprofile=coverage_new.out ./internal/api)",
      "Bash(env CGO_ENABLED=1 go test -v -short -coverprofile=coverage_new.out ./internal/api ./internal/configuration)"
    ],
    "deny": [],
    "defaultMode": "acceptEdits",
    "additionalDirectories": [
      "/home/serge/scratch",
      "/home/serge",
      "/etc",
      "/tmp"
    ]
  },
  "memory": ".claude/CLAUDE.md",
  "saveSettingsPath": ".claude/settings.json",
  "useLocalSettings": false
}
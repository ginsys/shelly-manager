FROM golang:1.23-alpine AS builder

WORKDIR /app

# Install build dependencies (git only - no longer need C compiler for pure Go build)
RUN apk add --no-cache git

# Copy go mod files
COPY go.mod go.sum ./
RUN go mod download

# Copy source code
COPY . .

# Build the application with optimization and static linking
ARG TARGETPLATFORM
ARG BUILDPLATFORM
RUN echo "Building for $TARGETPLATFORM on $BUILDPLATFORM"
RUN CGO_ENABLED=0 go build \
    -a -installsuffix cgo \
    -ldflags '-s -w' \
    -o shelly-manager ./cmd/shelly-manager

# Final stage
FROM alpine:latest

# Security hardening (sqlite removed - using pure Go driver)
RUN apk --no-cache add ca-certificates tzdata \
    && adduser -D -u 10001 -s /bin/sh shellyuser \
    && rm -rf /var/cache/apk/*

# Set working directory
WORKDIR /app

# Create data directory with proper ownership
RUN mkdir -p /data \
    && chown -R shellyuser:shellyuser /data /app

# Copy binary from builder
COPY --from=builder /app/shelly-manager ./shelly-manager

# Legacy web folder removed in Phase 8 (new SPA under ui/)
COPY --chown=shellyuser:shellyuser configs/ ./configs/

# Switch to non-root user
USER shellyuser

# Expose port
EXPOSE 8080

# Create volume for data persistence
VOLUME ["/data"]

# Set environment variables
ENV SHELLY_DATABASE_PATH=/data/shelly.db \
    GIN_MODE=release

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD ["./shelly-manager", "--version"] || exit 1

# Graceful shutdown signal
STOPSIGNAL SIGTERM

CMD ["./shelly-manager", "server"]

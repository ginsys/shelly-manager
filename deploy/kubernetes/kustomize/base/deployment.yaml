apiVersion: apps/v1
kind: Deployment
metadata:
  name: shelly-manager
  labels:
    app: shelly-manager
    component: api-server
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: shelly-manager
      component: api-server
  template:
    metadata:
      labels:
        app: shelly-manager
        component: api-server
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        fsGroup: 10001
      containers:
      - name: manager
        image: ghcr.io/ginsys/shelly-manager:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        envFrom:
        - configMapRef:
            name: shelly-manager-config
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "250m"
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 20
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /readyz
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop: ["ALL"]
        volumeMounts:
        - name: data
          mountPath: /data
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /.cache
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: shelly-manager-data
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: shelly-provisioner
  labels:
    app: shelly-manager
    component: provisioner
spec:
  selector:
    matchLabels:
      app: shelly-manager
      component: provisioner
  template:
    metadata:
      labels:
        app: shelly-manager
        component: provisioner
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090" 
        prometheus.io/path: "/metrics"
    spec:
      hostNetwork: true  # Required for WiFi interface access
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        fsGroup: 10001
      containers:
      - name: provisioner
        image: ghcr.io/ginsys/shelly-provisioner:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: API_URL
          value: "http://shelly-manager:8080"
        - name: LOG_LEVEL
          value: "info"
        - name: LOG_FORMAT
          value: "json"
        - name: LOG_OUTPUT
          value: "stdout"
        - name: GIN_MODE
          value: "release"
        - name: PROVISIONING_INTERVAL
          value: "600"
        - name: PROVISIONING_AUTO
          value: "false"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          exec:
            command:
            - /app/shelly-provisioner
            - status
          initialDelaySeconds: 30
          periodSeconds: 60
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - /app/shelly-provisioner
            - status
          initialDelaySeconds: 15
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 2
        securityContext:
          allowPrivilegeEscalation: true  # Required for network operations
          privileged: true                # Required for WiFi interface access
          capabilities:
            add: ["NET_ADMIN", "NET_RAW"]
        volumeMounts:
        - name: wpa-supplicant
          mountPath: /var/run/wpa_supplicant
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: wpa-supplicant
        hostPath:
          path: /var/run/wpa_supplicant
          type: DirectoryOrCreate
      - name: tmp
        emptyDir: {}
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
